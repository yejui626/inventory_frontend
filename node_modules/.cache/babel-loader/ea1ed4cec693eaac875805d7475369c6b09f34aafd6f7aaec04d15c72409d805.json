{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\ims_goo\\\\inventory_frontend\\\\src\\\\components\\\\BookList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction BookList() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage] = useState(10); // Number of products per page\n\n  useEffect(() => {\n    fetchProducts();\n  }, [currentPage]); // Fetch products whenever currentPage changes\n\n  const fetchProducts = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8000/api/inventory/?page=${currentPage}`);\n      setProducts(response.data.results); // Assuming your API returns paginated results with a 'results' key\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      setLoading(false);\n    }\n  };\n  const pageCount = Math.ceil(products.length / perPage); // Calculate total number of pages\n\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"my-4\",\n      children: \"Book List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ISBN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Author\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.isbn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 37\n            }, this)]\n          }, product.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        children: Array.from({\n          length: pageCount\n        }).map((_, index) => /*#__PURE__*/_jsxDEV(Pagination.Item, {\n          active: index + 1 === currentPage,\n          onClick: () => handlePageChange(index + 1),\n          children: index + 1\n        }, index + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(BookList, \"LSz7kKnseG2MvNA8P94PH++rbno=\");\n_c = BookList;\nexport default BookList;\nvar _c;\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","BookList","_s","products","setProducts","loading","setLoading","currentPage","setCurrentPage","perPage","fetchProducts","response","get","data","results","error","console","pageCount","Math","ceil","length","handlePageChange","pageNumber","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","product","title","isbn","author","category","price","quantity","id","Pagination","Array","from","_","index","Item","active","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/ims_goo/inventory_frontend/src/components/BookList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction BookList() {\r\n    const [products, setProducts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [perPage] = useState(10); // Number of products per page\r\n\r\n    useEffect(() => {\r\n        fetchProducts();\r\n    }, [currentPage]); // Fetch products whenever currentPage changes\r\n\r\n    const fetchProducts = async () => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:8000/api/inventory/?page=${currentPage}`);\r\n            setProducts(response.data.results); // Assuming your API returns paginated results with a 'results' key\r\n            setLoading(false);\r\n        } catch (error) {\r\n            console.error('Error fetching products:', error);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const pageCount = Math.ceil(products.length / perPage); // Calculate total number of pages\r\n\r\n    const handlePageChange = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"my-4\">Book List</h1>\r\n\r\n            {loading ? (\r\n                <div>Loading...</div>\r\n            ) : (\r\n                <>\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Title</th>\r\n                                <th>ISBN</th>\r\n                                <th>Author</th>\r\n                                <th>Category</th>\r\n                                <th>Price</th>\r\n                                <th>Quantity</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {products.map(product => (\r\n                                <tr key={product.id}>\r\n                                    <td>{product.title}</td>\r\n                                    <td>{product.isbn}</td>\r\n                                    <td>{product.author}</td>\r\n                                    <td>{product.category}</td>\r\n                                    <td>{product.price}</td>\r\n                                    <td>{product.quantity}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                    <Pagination>\r\n                        {Array.from({ length: pageCount }).map((_, index) => (\r\n                            <Pagination.Item \r\n                                key={index + 1} \r\n                                active={index + 1 === currentPage}\r\n                                onClick={() => handlePageChange(index + 1)}\r\n                            >\r\n                                {index + 1}\r\n                            </Pagination.Item>\r\n                        ))}\r\n                    </Pagination>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BookList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}